C51 COMPILER V9.00   MAIN                                                                  01/07/2021 18:11:19 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keil_5.28\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\ma
                    -in.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "stc8g.h"
   2          #include "intrins.h"
   3          /*
   4          0x01 收缩压
   5          0x02 舒张压
   6          0x03 心率
   7          0x04 温度高位
   8          0x05 温度低位
   9          0x11 脉搏波高八位
  10          0x12 脉搏波高八位
  11          
  12          0x07 佩戴检测
  13          0x08 tft背光
  14          0x09 sensor 电源
  15          0x10 stc8g 睡眠
  16          */
  17          #define Systolic_bit 0x01
  18          #define Diastolic_bit 0x02
  19          #define heart_bit 0x03
  20          #define temp_h 0x04
  21          #define temp_l 0x05
  22          #define wave_h 0x11
  23          #define wave_l 0x12
  24          
  25          #define status 0x07
  26          #define tft_bit 0x08
  27          #define sensor_bit 0x09
  28          #define stc_sleep_bit 0x10
  29          sbit    sensor_power_control = P3^3;
  30          sbit    tft_power_control = P3^2;
  31          
  32          #define MAIN_Fosc   11059200L //定义主时钟
  33          typedef unsigned char u8;
  34          /*MK0908命令表*/
  35          unsigned char get_data[] ={0xFD,0X00,0X00,0X00,0X00,0X00};//获取心率血压温度
  36          unsigned char get_wave[] ={0xFC,0X00,0X00,0X00,0X00,0X00};//脉搏波读取
  37          unsigned char get_status[] ={0xF8,0X00,0X00,0X00,0X00,0X00};//模块工作状态读取
  38          
  39          unsigned char receive_buffer[6];
  40          unsigned char data_i = 0;//字节计数
  41          unsigned char receive_success = 0;//接收完成
  42          
  43          
  44          bit isda;                                       //设备地址标志
  45          bit isma;                                       //存储地址标志
  46          unsigned char addr;
  47          unsigned char pdata buffer[256];
  48          
  49          void Delay_ms(unsigned int ms)    //@11.0592MHz
  50          {
  51   1        unsigned char i, j,k;
  52   1        for(k=0;k<ms;k++)
  53   1        {
  54   2          i = 15;
C51 COMPILER V9.00   MAIN                                                                  01/07/2021 18:11:19 PAGE 2   

  55   2          j = 90;
  56   2          do
  57   2          {
  58   3            while (--j);
  59   3          } while (--i);
  60   2        }
  61   1      }
  62          
  63          void I2C_Isr() interrupt 24
  64          {
  65   1          if (I2CSLST & 0x40)
  66   1          {
  67   2              I2CSLST &= ~0x40;                       //处理START事件
  68   2          }
  69   1          else if (I2CSLST & 0x20)
  70   1          {
  71   2              I2CSLST &= ~0x20;                       //处理RECV事件
  72   2              if (isda)
  73   2              {
  74   3                  isda = 0;                           //处理RECV事件（RECV DEVICE ADDR）
  75   3              }
  76   2              else if (isma)
  77   2              {
  78   3                  isma = 0;                           //处理RECV事件（RECV MEMORY ADDR）
  79   3                  addr = I2CRXD;
  80   3                  I2CTXD = buffer[addr];
  81   3              }
  82   2              else
  83   2              {
  84   3                  buffer[addr++] = I2CRXD;            //处理RECV事件（RECV DATA）
  85   3              }
  86   2          }
  87   1          else if (I2CSLST & 0x10)
  88   1          {
  89   2              I2CSLST &= ~0x10;                       //处理SEND事件
  90   2              if (I2CSLST & 0x02)
  91   2              {
  92   3                  I2CTXD = 0xff;
  93   3              }
  94   2              else
  95   2              {
  96   3                  I2CTXD = buffer[++addr];
  97   3              }
  98   2          }
  99   1          else if (I2CSLST & 0x08)
 100   1          {
 101   2              I2CSLST &= ~0x08;                       //处理STOP事件
 102   2              isda = 1;
 103   2              isma = 1;
 104   2          }
 105   1         // _pop_(P_SW2);
 106   1      }
 107          void mk0809_send_command(unsigned char command[])
 108          {
 109   1        unsigned char i = 0;
 110   1        for(i=0;i<6;i++)
 111   1        {
 112   2          SBUF = command[i];//发送MK0908命令
 113   2          while(!TI);
 114   2          TI = 0;
 115   2        }
 116   1      }
C51 COMPILER V9.00   MAIN                                                                  01/07/2021 18:11:19 PAGE 3   

 117          void gpio_init()
 118          {
 119   1          P3M0 = 0x00;                                //设置P3.0~P3.7为双向口模式
 120   1          P3M1 = 0x00;
 121   1          P5M0 = 0x00;                                //设置P5.0~P5.7为双向口模式
 122   1          P5M1 = 0x00;
 123   1          P_SW2 = 0x10;                               //IIC引脚切换
 124   1          P_SW2 |= 0x80;                              //允许写入IIC相关寄存器
 125   1      }
 126          void UART1_Isr() interrupt 4
 127          {
 128   1          if (TI)
 129   1          {
 130   2            TI = 0;                                 //清中断标志
 131   2          }
 132   1          if (RI)
 133   1          {
 134   2            receive_buffer[data_i] = SBUF;
 135   2            data_i++;
 136   2            if(data_i>=6)
 137   2            {
 138   3              data_i = 0;
 139   3              receive_success = 1;
 140   3            }
 141   2            RI = 0;                                 //清中断标志
 142   2          }
 143   1      }
 144          
 145          void main()
 146          {   
 147   1          u8 time_over = 0;
 148   1          u8 data_iic = 0x55;
 149   1          gpio_init();
 150   1          /*UART-115200*/
 151   1          SCON = 0x50;    //8位数据,可变波特率
 152   1          AUXR |= 0x40;   //定时器1时钟为Fosc,即1T
 153   1          AUXR &= 0xFE;   //串口1选择定时器1为波特率发生器
 154   1          TMOD &= 0x0F;   //设定定时器1为16位自动重装方式
 155   1          TL1 = 0xE8;   //设定定时初值
 156   1          TH1 = 0xFF;   //设定定时初值
 157   1          ET1 = 0;    //禁止定时器1中断
 158   1          TR1 = 1;    //启动定时器1
 159   1          ES=1;
 160   1          /*iic*/
 161   1          I2CCFG = 0x81;                              //使能I2C从机模式
 162   1          I2CSLADR = 0x5a;                            //设置从机设备地址为5A
 163   1          I2CSLST = 0x00;
 164   1          I2CSLCR = 0x78;                             //使能从机模式中断
 165   1          EA = 1;
 166   1          isda = 1;                                   //用户变量初始化
 167   1          isma = 1;
 168   1          addr = 0;
 169   1          I2CTXD = buffer[addr];
 170   1          buffer[tft_bit] = 1;//背光默认开启  
 171   1          buffer[sensor_bit] = 0;//传感器电源默认关闭
 172   1          buffer[stc_sleep_bit] = 0;//stc掉电睡眠模式关闭
 173   1          
 174   1          buffer[Systolic_bit] = 0;
 175   1          buffer[Diastolic_bit] = 0;
 176   1          buffer[heart_bit] = 0;
 177   1          buffer[temp_h] = 0;
 178   1          buffer[temp_l] = 0;
C51 COMPILER V9.00   MAIN                                                                  01/07/2021 18:11:19 PAGE 4   

 179   1          buffer[wave_h] = 0;
 180   1          buffer[wave_l] = 0;
 181   1          buffer[status] = 0;
 182   1          while (1)
 183   1          { 
 184   2            if(buffer[tft_bit] == 1)
 185   2            {
 186   3              tft_power_control = 1;
 187   3            }
 188   2            else
 189   2            {
 190   3              tft_power_control = 0;
 191   3            }
 192   2            
 193   2            if(buffer[sensor_bit] == 1)
 194   2            {
 195   3              sensor_power_control = 1;
 196   3            }
 197   2            else
 198   2            {
 199   3              sensor_power_control = 0;
 200   3            }
 201   2            
 202   2            if(buffer[stc_sleep_bit] == 1)
 203   2            {
 204   3                PCON = 0X02; //进入掉电模式
 205   3            }
 206   2            else
 207   2            {
 208   3              
 209   3            }
 210   2            /*以下这段程序指针越界会跑死(回家调)*/
 211   2            if(buffer[sensor_bit] == 1)
 212   2            {
 213   3                mk0809_send_command(get_data);//获取数据
 214   3                //while(!(receive_success==1));//等待接收完成再去解析数据
 215   3                Delay_ms(200);
 216   3                time_over = 0; //清除超时跳过标志
 217   3                if(receive_success == 1)
 218   3                {
 219   4                  buffer[Systolic_bit]=receive_buffer[1];
 220   4                  buffer[Diastolic_bit]=receive_buffer[2];
 221   4                  buffer[heart_bit]=receive_buffer[3];
 222   4                  buffer[temp_h]=receive_buffer[4];
 223   4                  buffer[temp_l]=receive_buffer[5];
 224   4                  receive_success=0;
 225   4                }
 226   3                
 227   3                /*
 228   3                mk0809_send_command(get_wave);//获取波
 229   3                Delay_ms(200);
 230   3                //while(!(receive_success==1));//等待接收完成再去解析数据
 231   3                time_over = 0; //清除超时跳过标志
 232   3                if(receive_success == 1)
 233   3                {
 234   3                  buffer[wave_h]=receive_buffer[2];
 235   3                  buffer[wave_l]=receive_buffer[3];
 236   3                  receive_success=0;
 237   3                }
 238   3                
 239   3                
 240   3                mk0809_send_command(get_status);//获佩戴状态
C51 COMPILER V9.00   MAIN                                                                  01/07/2021 18:11:19 PAGE 5   

 241   3                Delay_ms(200);
 242   3                //while(!(receive_success==1));//等待接收完成再去解析数据
 243   3                time_over = 0; //清除超时跳过标志
 244   3                if(receive_success == 1)
 245   3                {
 246   3                  buffer[status]=receive_buffer[3];
 247   3                  receive_success=0;
 248   3                }
 249   3                */
 250   3                Delay_ms(50);//总体延迟50ms
 251   3            }
 252   2        }
 253   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    464    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =    256    ----
   DATA SIZE        =     27       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
